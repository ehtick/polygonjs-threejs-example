import { ParamValueSerializedTypeMap } from "@polygonjs/polygonjs/dist/src/engine/params/types/ParamValueSerializedTypeMap";

import { PolyScene } from "@polygonjs/polygonjs/dist/src/engine/scene/PolyScene";
// obj
import { GeoObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/Geo";
import { HemisphereLightObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/HemisphereLight";
import { PerspectiveCameraObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/PerspectiveCamera";
import { SpotLightObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/SpotLight";
// sop
import { ActorSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Actor";
import { BoxSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Box";
import { ColorSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Color";
import { CopySopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Copy";
import { EventsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/EventsNetwork";
import { MaterialSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Material";
import { MaterialsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/MaterialsNetwork";
import { MergeSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Merge";
import { PlaneSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Plane";
import { TextSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Text";
import { TransformSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Transform";
import { TubeSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Tube";
// mat
import { MeshLambertMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshLambert";
// event
import { CameraOrbitControlsEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/CameraOrbitControls";
// actor
import { OnTickActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/OnTick";
import { PlaneActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/Plane";
import { RayFromCursorActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/RayFromCursor";
import { RayIntersectPlaneActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/RayIntersectPlane";
import { SetObjectLookAtActorNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/actor/SetObjectLookAt";

export class PolySceneWithNodeMap_scene_01 extends PolyScene {
  node(path: "/hemisphereLight1"): HemisphereLightObjNode;
  node(path: "/spotLight1"): SpotLightObjNode;
  node(path: "/geo1"): GeoObjNode;
  node(path: "/geo1/text_welcome"): TextSopNode;
  node(path: "/geo1/text_to"): TextSopNode;
  node(path: "/geo1/text_Polygonjs"): TextSopNode;
  node(path: "/geo1/merge1"): MergeSopNode;
  node(path: "/geo1/color1"): ColorSopNode;
  node(path: "/geo1/material1"): MaterialSopNode;
  node(path: "/geo1/color2"): ColorSopNode;
  node(path: "/geo1/color3"): ColorSopNode;
  node(path: "/geo1/transform1"): TransformSopNode;
  node(path: "/geo1/transform2"): TransformSopNode;
  node(path: "/geo1/transform3"): TransformSopNode;
  node(path: "/geo1/materials1"): MaterialsNetworkSopNode;
  node(path: "/geo1/materials1/meshLambert1"): MeshLambertMatNode;
  node(path: "/perspectiveCamera1"): PerspectiveCameraObjNode;
  node(path: "/perspectiveCamera1/events1"): EventsNetworkSopNode;
  node(
    path: "/perspectiveCamera1/events1/cameraOrbitControls1"
  ): CameraOrbitControlsEventNode;
  node(path: "/arrows"): GeoObjNode;
  node(path: "/arrows/box1"): BoxSopNode;
  node(path: "/arrows/copy1"): CopySopNode;
  node(path: "/arrows/merge1"): MergeSopNode;
  node(path: "/arrows/plane1"): PlaneSopNode;
  node(path: "/arrows/transform1"): TransformSopNode;
  node(path: "/arrows/transform2"): TransformSopNode;
  node(path: "/arrows/tube1"): TubeSopNode;
  node(path: "/arrows/actor1"): ActorSopNode;
  node(path: "/arrows/actor1/onTick1"): OnTickActorNode;
  node(path: "/arrows/actor1/plane1"): PlaneActorNode;
  node(path: "/arrows/actor1/rayFromCursor1"): RayFromCursorActorNode;
  node(path: "/arrows/actor1/rayIntersectPlane1"): RayIntersectPlaneActorNode;
  node(path: "/arrows/actor1/setObjectLookAt1"): SetObjectLookAtActorNode;
  node(
    path: string
  ): any /* we need any for now as otherwise an error occurs when adding plugins to the overloaded methods */ {
    return super.node(path);
  }
}

export interface PolySceneProps_scene_01 {
  "hemisphereLight1--skyColor"?: ParamValueSerializedTypeMap["color"];
  "hemisphereLight1--skyColor-skyColorr"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColor-skyColorg"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColor-skyColorb"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColorr"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColorg"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--skyColorb"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColor"?: ParamValueSerializedTypeMap["color"];
  "hemisphereLight1--groundColor-groundColorr"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColor-groundColorg"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColor-groundColorb"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColorr"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColorg"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--groundColorb"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--position"?: ParamValueSerializedTypeMap["vector3"];
  "hemisphereLight1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--positionx"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--positiony"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--positionz"?: ParamValueSerializedTypeMap["float"];
  "hemisphereLight1--name"?: ParamValueSerializedTypeMap["string"];
  "spotLight1--transform"?: ParamValueSerializedTypeMap["folder"];
  "spotLight1--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "spotLight1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "spotLight1--t"?: ParamValueSerializedTypeMap["vector3"];
  "spotLight1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--tx"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--ty"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--tz"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--r"?: ParamValueSerializedTypeMap["vector3"];
  "spotLight1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--rx"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--ry"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--rz"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--s"?: ParamValueSerializedTypeMap["vector3"];
  "spotLight1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--sx"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--sy"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--sz"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--scale"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "spotLight1--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "spotLight1--light"?: ParamValueSerializedTypeMap["folder"];
  "spotLight1--color"?: ParamValueSerializedTypeMap["color"];
  "spotLight1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--colorr"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--colorg"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--colorb"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--angle"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--penumbra"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--decay"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--distance"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "spotLight1--helperSize"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--name"?: ParamValueSerializedTypeMap["string"];
  "spotLight1--shadow"?: ParamValueSerializedTypeMap["folder"];
  "spotLight1--castShadow"?: ParamValueSerializedTypeMap["boolean"];
  "spotLight1--shadowAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "spotLight1--shadowUpdateOnNextRender"?: ParamValueSerializedTypeMap["boolean"];
  "spotLight1--shadowRes"?: ParamValueSerializedTypeMap["vector2"];
  "spotLight1--shadowRes-shadowResx"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--shadowRes-shadowResy"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--shadowResx"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--shadowResy"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--shadowBias"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--shadowNear"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--shadowFar"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--shadowRadius"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--debugShadow"?: ParamValueSerializedTypeMap["boolean"];
  "spotLight1--volumetric"?: ParamValueSerializedTypeMap["folder"];
  "spotLight1--tvolumetric"?: ParamValueSerializedTypeMap["boolean"];
  "spotLight1--volAttenuation"?: ParamValueSerializedTypeMap["float"];
  "spotLight1--volAnglePower"?: ParamValueSerializedTypeMap["float"];
  "geo1--transform"?: ParamValueSerializedTypeMap["folder"];
  "geo1--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "geo1--display"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-text_welcome--font"?: ParamValueSerializedTypeMap["string"];
  "geo1-text_welcome--text"?: ParamValueSerializedTypeMap["string"];
  "geo1-text_welcome--type"?: ParamValueSerializedTypeMap["integer"];
  "geo1-text_welcome--size"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_welcome--extrude"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_welcome--segments"?: ParamValueSerializedTypeMap["integer"];
  "geo1-text_welcome--bevelEnabled"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-text_welcome--bevelThickness"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_welcome--bevelSize"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_welcome--bevelOffset"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_welcome--bevelSegments"?: ParamValueSerializedTypeMap["integer"];
  "geo1-text_welcome--strokeWidth"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_welcome--lineHeight"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_welcome--splitPerLetter"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-text_welcome--keepEmptyGeometries"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-text_welcome--justifyMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-text_welcome--tadvanced"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-text_welcome--isCCW"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-text_to--font"?: ParamValueSerializedTypeMap["string"];
  "geo1-text_to--text"?: ParamValueSerializedTypeMap["string"];
  "geo1-text_to--type"?: ParamValueSerializedTypeMap["integer"];
  "geo1-text_to--size"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_to--extrude"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_to--segments"?: ParamValueSerializedTypeMap["integer"];
  "geo1-text_to--bevelEnabled"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-text_to--bevelThickness"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_to--bevelSize"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_to--bevelOffset"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_to--bevelSegments"?: ParamValueSerializedTypeMap["integer"];
  "geo1-text_to--strokeWidth"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_to--lineHeight"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_to--splitPerLetter"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-text_to--keepEmptyGeometries"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-text_to--justifyMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-text_to--tadvanced"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-text_to--isCCW"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-text_Polygonjs--font"?: ParamValueSerializedTypeMap["string"];
  "geo1-text_Polygonjs--text"?: ParamValueSerializedTypeMap["string"];
  "geo1-text_Polygonjs--type"?: ParamValueSerializedTypeMap["integer"];
  "geo1-text_Polygonjs--size"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_Polygonjs--extrude"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_Polygonjs--segments"?: ParamValueSerializedTypeMap["integer"];
  "geo1-text_Polygonjs--bevelEnabled"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-text_Polygonjs--bevelThickness"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_Polygonjs--bevelSize"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_Polygonjs--bevelOffset"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_Polygonjs--bevelSegments"?: ParamValueSerializedTypeMap["integer"];
  "geo1-text_Polygonjs--strokeWidth"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_Polygonjs--lineHeight"?: ParamValueSerializedTypeMap["float"];
  "geo1-text_Polygonjs--splitPerLetter"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-text_Polygonjs--keepEmptyGeometries"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-text_Polygonjs--justifyMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-text_Polygonjs--tadvanced"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-text_Polygonjs--isCCW"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "geo1-color1--fromAttribute"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-color1--attribName"?: ParamValueSerializedTypeMap["string"];
  "geo1-color1--color"?: ParamValueSerializedTypeMap["color"];
  "geo1-color1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-color1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-color1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-color1--colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-color1--colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-color1--colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-color1--asHsv"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-material1--applyToChildren"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "geo1-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "geo1-color2--fromAttribute"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-color2--attribName"?: ParamValueSerializedTypeMap["string"];
  "geo1-color2--color"?: ParamValueSerializedTypeMap["color"];
  "geo1-color2--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-color2--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-color2--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-color2--colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-color2--colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-color2--colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-color2--asHsv"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-color3--fromAttribute"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-color3--attribName"?: ParamValueSerializedTypeMap["string"];
  "geo1-color3--color"?: ParamValueSerializedTypeMap["color"];
  "geo1-color3--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-color3--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-color3--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-color3--colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-color3--colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-color3--colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-color3--asHsv"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-transform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform2--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform3--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform3--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform3--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform3--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform3--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform3--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform3--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform3--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform3--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform3--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--default"?: ParamValueSerializedTypeMap["folder"];
  "geo1-materials1-meshLambert1--color"?: ParamValueSerializedTypeMap["color"];
  "geo1-materials1-meshLambert1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--useVertexColors"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--opacity"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--textures"?: ParamValueSerializedTypeMap["folder"];
  "geo1-materials1-meshLambert1--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--map"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-materials1-meshLambert1--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-materials1-meshLambert1--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-materials1-meshLambert1--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--emissive"?: ParamValueSerializedTypeMap["color"];
  "geo1-materials1-meshLambert1--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-materials1-meshLambert1--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-materials1-meshLambert1--combine"?: ParamValueSerializedTypeMap["integer"];
  "geo1-materials1-meshLambert1--reflectivity"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--refractionRatio"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-materials1-meshLambert1--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "geo1-materials1-meshLambert1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--front"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--blending"?: ParamValueSerializedTypeMap["integer"];
  "geo1-materials1-meshLambert1--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "geo1-materials1-meshLambert1--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "geo1-materials1-meshLambert1--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-materials1-meshLambert1--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "geo1-materials1-meshLambert1--wireframeLinecap"?: ParamValueSerializedTypeMap["integer"];
  "geo1-materials1-meshLambert1--wireframeLinejoin"?: ParamValueSerializedTypeMap["integer"];
  "geo1-materials1-meshLambert1--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--transform"?: ParamValueSerializedTypeMap["folder"];
  "perspectiveCamera1--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1--t"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--tx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--ty"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--tz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--r"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--rx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--ry"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--rz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--s"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--sx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--sy"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--sz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--scale"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "perspectiveCamera1--camera"?: ParamValueSerializedTypeMap["folder"];
  "perspectiveCamera1--controls"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--updateFromControlsMode"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1--near"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--far"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--display"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--fov"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--frameMode"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1--expectedAspectRatio"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1--setMainCamera"?: ParamValueSerializedTypeMap["button"];
  "perspectiveCamera1--layer"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1--render"?: ParamValueSerializedTypeMap["folder"];
  "perspectiveCamera1--setScene"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--scene"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--setRenderer"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--renderer"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--setCSSRenderer"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--CSSRenderer"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1--doPostProcess"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1--postProcessNode"?: ParamValueSerializedTypeMap["node_path"];
  "perspectiveCamera1-events1-cameraOrbitControls1--enabled"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--allowPan"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--allowRotate"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--allowZoom"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--tdamping"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--damping"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--screenSpacePanning"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--rotateSpeed"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--minDistance"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--maxDistance"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--limitAzimuthAngle"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRange-polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRange-polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target"?: ParamValueSerializedTypeMap["vector3"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target-targetx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target-targety"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--target-targetz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--targetx"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--targety"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--targetz"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--enableKeys"?: ParamValueSerializedTypeMap["boolean"];
  "perspectiveCamera1-events1-cameraOrbitControls1--keysMode"?: ParamValueSerializedTypeMap["integer"];
  "perspectiveCamera1-events1-cameraOrbitControls1--keysPanSpeed"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--keysRotateSpeedVertical"?: ParamValueSerializedTypeMap["float"];
  "perspectiveCamera1-events1-cameraOrbitControls1--keysRotateSpeedHorizontal"?: ParamValueSerializedTypeMap["float"];
  "arrows--transform"?: ParamValueSerializedTypeMap["folder"];
  "arrows--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "arrows--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "arrows--t"?: ParamValueSerializedTypeMap["vector3"];
  "arrows--t-tx"?: ParamValueSerializedTypeMap["float"];
  "arrows--t-ty"?: ParamValueSerializedTypeMap["float"];
  "arrows--t-tz"?: ParamValueSerializedTypeMap["float"];
  "arrows--tx"?: ParamValueSerializedTypeMap["float"];
  "arrows--ty"?: ParamValueSerializedTypeMap["float"];
  "arrows--tz"?: ParamValueSerializedTypeMap["float"];
  "arrows--r"?: ParamValueSerializedTypeMap["vector3"];
  "arrows--r-rx"?: ParamValueSerializedTypeMap["float"];
  "arrows--r-ry"?: ParamValueSerializedTypeMap["float"];
  "arrows--r-rz"?: ParamValueSerializedTypeMap["float"];
  "arrows--rx"?: ParamValueSerializedTypeMap["float"];
  "arrows--ry"?: ParamValueSerializedTypeMap["float"];
  "arrows--rz"?: ParamValueSerializedTypeMap["float"];
  "arrows--s"?: ParamValueSerializedTypeMap["vector3"];
  "arrows--s-sx"?: ParamValueSerializedTypeMap["float"];
  "arrows--s-sy"?: ParamValueSerializedTypeMap["float"];
  "arrows--s-sz"?: ParamValueSerializedTypeMap["float"];
  "arrows--sx"?: ParamValueSerializedTypeMap["float"];
  "arrows--sy"?: ParamValueSerializedTypeMap["float"];
  "arrows--sz"?: ParamValueSerializedTypeMap["float"];
  "arrows--scale"?: ParamValueSerializedTypeMap["float"];
  "arrows--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "arrows--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "arrows--display"?: ParamValueSerializedTypeMap["boolean"];
  "arrows--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "arrows-box1--size"?: ParamValueSerializedTypeMap["float"];
  "arrows-box1--sizes"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-box1--sizes-sizesx"?: ParamValueSerializedTypeMap["float"];
  "arrows-box1--sizes-sizesy"?: ParamValueSerializedTypeMap["float"];
  "arrows-box1--sizes-sizesz"?: ParamValueSerializedTypeMap["float"];
  "arrows-box1--sizesx"?: ParamValueSerializedTypeMap["float"];
  "arrows-box1--sizesy"?: ParamValueSerializedTypeMap["float"];
  "arrows-box1--sizesz"?: ParamValueSerializedTypeMap["float"];
  "arrows-box1--divisions"?: ParamValueSerializedTypeMap["integer"];
  "arrows-box1--center"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-box1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "arrows-box1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "arrows-box1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "arrows-box1--centerx"?: ParamValueSerializedTypeMap["float"];
  "arrows-box1--centery"?: ParamValueSerializedTypeMap["float"];
  "arrows-box1--centerz"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--count"?: ParamValueSerializedTypeMap["integer"];
  "arrows-copy1--t"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-copy1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--tx"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--ty"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--tz"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--r"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-copy1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--rx"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--ry"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--rz"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--s"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-copy1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--sx"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--sy"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--sz"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--scale"?: ParamValueSerializedTypeMap["float"];
  "arrows-copy1--transformOnly"?: ParamValueSerializedTypeMap["boolean"];
  "arrows-copy1--transformMode"?: ParamValueSerializedTypeMap["integer"];
  "arrows-copy1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "arrows-copy1--copyAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "arrows-copy1--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "arrows-copy1--useCopyExpr"?: ParamValueSerializedTypeMap["boolean"];
  "arrows-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "arrows-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "arrows-plane1--size"?: ParamValueSerializedTypeMap["vector2"];
  "arrows-plane1--size-sizex"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--size-sizey"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--sizex"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--sizey"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--useSegmentsCount"?: ParamValueSerializedTypeMap["boolean"];
  "arrows-plane1--stepSize"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--segments"?: ParamValueSerializedTypeMap["vector2"];
  "arrows-plane1--segments-segmentsx"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--segments-segmentsy"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--segmentsx"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--segmentsy"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-plane1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--directionx"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--directiony"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--directionz"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--center"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-plane1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--centerx"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--centery"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--centerz"?: ParamValueSerializedTypeMap["float"];
  "arrows-plane1--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "arrows-transform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "arrows-transform1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "arrows-transform1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "arrows-transform1--group"?: ParamValueSerializedTypeMap["string"];
  "arrows-transform1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "arrows-transform1--t"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-transform1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--tx"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--ty"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--tz"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--r"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-transform1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--rx"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--ry"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--rz"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--s"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-transform1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--sx"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--sy"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--sz"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--scale"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-transform1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "arrows-transform2--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "arrows-transform2--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "arrows-transform2--group"?: ParamValueSerializedTypeMap["string"];
  "arrows-transform2--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "arrows-transform2--t"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-transform2--t-tx"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--t-ty"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--t-tz"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--tx"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--ty"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--tz"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--r"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-transform2--r-rx"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--r-ry"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--r-rz"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--rx"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--ry"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--rz"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--s"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-transform2--s-sx"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--s-sy"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--s-sz"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--sx"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--sy"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--sz"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--scale"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-transform2--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--pivotx"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--pivoty"?: ParamValueSerializedTypeMap["float"];
  "arrows-transform2--pivotz"?: ParamValueSerializedTypeMap["float"];
  "arrows-tube1--radiusTop"?: ParamValueSerializedTypeMap["float"];
  "arrows-tube1--radiusBottom"?: ParamValueSerializedTypeMap["float"];
  "arrows-tube1--height"?: ParamValueSerializedTypeMap["float"];
  "arrows-tube1--segmentsRadial"?: ParamValueSerializedTypeMap["integer"];
  "arrows-tube1--segmentsHeight"?: ParamValueSerializedTypeMap["integer"];
  "arrows-tube1--cap"?: ParamValueSerializedTypeMap["boolean"];
  "arrows-tube1--center"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-tube1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "arrows-tube1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "arrows-tube1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "arrows-tube1--centerx"?: ParamValueSerializedTypeMap["float"];
  "arrows-tube1--centery"?: ParamValueSerializedTypeMap["float"];
  "arrows-tube1--centerz"?: ParamValueSerializedTypeMap["float"];
  "arrows-tube1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-tube1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "arrows-tube1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "arrows-tube1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "arrows-tube1--directionx"?: ParamValueSerializedTypeMap["float"];
  "arrows-tube1--directiony"?: ParamValueSerializedTypeMap["float"];
  "arrows-tube1--directionz"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1--useThisNode"?: ParamValueSerializedTypeMap["boolean"];
  "arrows-actor1--node"?: ParamValueSerializedTypeMap["node_path"];
  "arrows-actor1-plane1--normal"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-actor1-plane1--normal-normalx"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-plane1--normal-normaly"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-plane1--normal-normalz"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-plane1--normalx"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-plane1--normaly"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-plane1--normalz"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-plane1--constant"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-rayFromCursor1--element"?: ParamValueSerializedTypeMap["integer"];
  "arrows-actor1-setObjectLookAt1--targetPosition"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-actor1-setObjectLookAt1--targetPosition-targetPositionx"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-setObjectLookAt1--targetPosition-targetPositiony"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-setObjectLookAt1--targetPosition-targetPositionz"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-setObjectLookAt1--targetPositionx"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-setObjectLookAt1--targetPositiony"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-setObjectLookAt1--targetPositionz"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-setObjectLookAt1--up"?: ParamValueSerializedTypeMap["vector3"];
  "arrows-actor1-setObjectLookAt1--up-upx"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-setObjectLookAt1--up-upy"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-setObjectLookAt1--up-upz"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-setObjectLookAt1--upx"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-setObjectLookAt1--upy"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-setObjectLookAt1--upz"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-setObjectLookAt1--lerp"?: ParamValueSerializedTypeMap["float"];
  "arrows-actor1-setObjectLookAt1--invertDirection"?: ParamValueSerializedTypeMap["boolean"];
  "arrows-actor1-setObjectLookAt1--updateMatrix"?: ParamValueSerializedTypeMap["boolean"];
}
